/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.73.0
  Forc version: 0.49.2
  Fuel-Core version: 0.22.0
*/

import {
  BigNumberish,
  BN,
  Predicate,
  Provider,
} from 'fuels';

export type AddressInput = { value: string };
export type AddressOutput = AddressInput;

export type PredicateAbiConfigurables = {
  REQUIRED_SIGNATURES: BigNumberish;
  SIGNERS: [AddressInput, AddressInput, AddressInput];
};

type PredicateAbiInputs = [];

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "[_; 3]",
      "components": [
        {
          "name": "__array_element",
          "type": 3,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "bool",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "struct Address",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 4,
      "type": "u64",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [],
      "name": "main",
      "output": {
        "name": "",
        "type": 2,
        "typeArguments": null
      },
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "REQUIRED_SIGNATURES",
      "configurableType": {
        "name": "",
        "type": 4,
        "typeArguments": null
      },
      "offset": 2032
    },
    {
      "name": "SIGNERS",
      "configurableType": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "offset": 2096
    }
  ]
}

const _bin = '0x740000034700000000000000000007e85dfcc00110fff3001aec5000910000001ae8000020f8330058fbe00250fbe004740000191a43d0001ae8100020f8330058fbe00250fbe004740000131a47d000104104405d47f0001ae9100020f8330058fbe00250fbe0047400000b1a47d000104504405d43f00115411400764000025d43f0011341140076400001240000005c43f010244000001af05000910000505ff100005ff110015ff120025ff130035ff140045ff150055ff160065ff170075ff180085ff3b0091aec5000910005f81a5ba0001a57e0006140000113450000764400061341004076400001360000005043b3d81a401000740000025043b3d81a400000134500007644000613410040764000025d43f00736400000614001057400000161400007154564007644000113456400764400af1a4000005047b5d872480020284504801a5000005d43f00816414400764000021af40000740000a65d43f0161041030061454401504bb3381ae910001ae5200020f8330058fbe00250fbe004740000ab1a47d000504bb4b0724c0040284914c05047b4b0504bb5d8504fb0a0725c00201b5c05c0105d35c072600020285d0600725c00201b5c15c0105d35c072600020285d06005043b1b0725c0040284135c0504fb598725c0040284d05c05043b598504fb060725c0040284d15c05047b260725c0020284525c03e4134401a408000134100407640000a5043b2185fec00435047b59850490008724c0040284914c0504bb3e07244004828490440740000065043b1685fec102d5fec0035504bb3e072440048284904405043b55072440048284124405047b28072400048284524005d43b07c13410040764000365043b5505047b2c872480048284504805d43b0aa1341000076400001360000005043b2c8504100085047b4f072480040284504805043b4f0724400201b440440104504405043b4f0724800201b481480104904805043b128724c0020284114c050450020724c0020284524c05047b39872480040284504805043b3781ae910001ae5000020f8330058fbe00250fbe004740000641a43d0005047b49072480020284504805043b1f05fec003e5047b490504bb108724c0020284914c050450008724c0020284524c0504bb42872440028284904407400000a5043b280504100405047b0e05fec101c50491020724c0008284904c0504bb42872400028284914005043b31072440028284124405d43b0851341000076400001360000005043b310504100085047b53072480020284504805043b5305d47f017104513007248006028ed1480724400201b4564401047b440504bb450724c0020284904c05043b470724c0020284114c0a14124207640000210514040750000a61af41000740000011af40000920005f81af9500059f050505d43c0005d47c0015d4bc0025d4fc0035d53c0045d57c0055d5bc0065d5fc0075d63c0085defc009920000504af800001af05000910000285ff100005ff110015ff120025ff130035ff3b0041aec5000910000001a43a0001a4790001a4be000724c0040284504c01af51000920000001af9200059f050285d43c0005d47c0015d4bc0025d4fc0035defc004920000284af800001af05000910000385ff100005ff110015ff120025ff130035ff140045ff150055ff3b0061aec5000910000781a43a0001a4790001a4be0005d4ff016104d33001a500000265000001a5070005fed40085fec00095fec000a5053b0407254004028ed05401aebb0001ae5400020f8330058fbe00250fbe004740000165043b05872500020284135005043b0585d4fb0085d53b00a42413500724c0020284504c01af51000920000781af9200059f050385d43c0005d47c0015d4bc0025d4fc0035d53c0045d57c0055defc006920000384af800001af05000910000585ff100005ff110015ff120025ff130035ff140045ff150055ff160065ff170075ff180085ff190095ff3b00a1aec5000910000401a43a0001a6790001a63e0005d47f015264400001a4470007248002028ed04801a4bb0005d4d20005d5120015d5520025d4920035f4530005f4540015f4550025f4520035d4bf015134920007648002c5d49900213492000764800225d4990025d4ff015104924c05d4d90025d5190005d559001155925407658000174000007264800001a587000155d5000765c000174000001285945401a5160005f6540001a5800005d53f01516516500765000055f6520015f6520021a440000264400007400000f5d519000105144c010514580105515805c5550005e515000105960407500000e5f6510005d47f0155f6510015d47f0155f6510021a44000026440000504100205d47f015264400001a447000504bb020724c0020284904c05d4120005d4d20015d5120025d4920035f4500005f4530015f4540025f4520035d43f015134100007640002c5d41900213410000764000225d4190025d4bf015104104805d4990025d4d90005d519001155505007654000174000007264000001a547000155940007658000174000001285535001a4d50005f6530001a5400005d4ff015164d54c0764c00055f6500015f6500021a400000264000007400000f5d4d9000104d3480104d3540105115405c5140005e4d4000105550407500000e5f6510005d43f0155f6500015d43f0155f6500021a400000264000001af40000920000401af9800059f050585d43c0005d47c0015d4bc0025d4fc0035d53c0045d57c0055d5bc0065d5fc0075d63c0085d67c0095defc00a920000584af80000470000000000000000000002000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000cccccccccccc00020000000000000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000008000000000000000830'

export class PredicateAbi__factory {

  static readonly abi = _abi
  static readonly bin = _bin;

  static createInstance(provider: Provider, configurables?: PredicateAbiConfigurables) {

    const { abi, bin } = PredicateAbi__factory

    const predicate = new Predicate(bin, provider, abi, configurables);

    return predicate;

  }

}
